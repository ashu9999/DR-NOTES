{"ast":null,"code":"import _slicedToArray from \"/home/ashutosh/Desktop/pyve/myenv/react-notemaster-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ashutosh/Desktop/pyve/myenv/react-notemaster-master/src/account/Signup.js\";\nimport React, { useState, Fragment } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\nimport { store } from '../index';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Copyright() {\n  return React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, 'Copyright Â© ', React.createElement(Link, {\n    color: \"inherit\",\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Notemaster\"), ' ', new Date().getFullYear(), '.');\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction SignUp(props) {\n  const classes = useStyles();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        username = _useState6[0],\n        setUsername = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        password1 = _useState8[0],\n        setPassword1 = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        email = _useState10[0],\n        setEmail = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        password2 = _useState12[0],\n        setPassword2 = _useState12[1];\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errResponse = _React$useState2[0],\n        setErrResponse = _React$useState2[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        emailError = _useState14[0],\n        setEmailError = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        usernameError = _useState16[0],\n        setUsernameError = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        passwordError = _useState18[0],\n        setPasswordError = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        passwordMatchError = _useState20[0],\n        setPasswordMatchError = _useState20[1];\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        active = _useState22[0],\n        setActive = _useState22[1];\n\n  function validateEmail(email) {\n    // eslint-disable-next-line\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    setEmailError(!re.test(String(email).toLowerCase()));\n  }\n\n  const userNameValidator = username => {\n    // eslint-disable-next-line\n    let re = /^([a-zA-Z0-9@/./+/-/_]+)$/;\n    let userNameChecker = re.test(String(username).trim().toLowerCase());\n\n    if (userNameChecker || username.trim() > 150) {\n      setUsernameError(false);\n    } else {\n      setUsernameError(false);\n    }\n  };\n\n  const passwordValidator = password => {\n    let re = /^([0-9]+)$/;\n    let passwordChecker = re.test(password);\n\n    if (passwordChecker || password.length < 8) {\n      setPasswordError(true);\n    } else {\n      setPasswordError(false);\n    }\n  };\n\n  const passwordMatch = password2 => {\n    let password1Value = {\n      password1\n    }.password1;\n\n    if (password1Value !== password2) {\n      setPasswordMatchError(true);\n    } else {\n      setPasswordMatchError(false);\n    }\n  };\n\n  const validator = () => {\n    let firstNameValue = {\n      firstName\n    }.firstName;\n    let lastNameValue = {\n      lastName\n    }.lastName;\n    let usernameValue = {\n      username\n    }.username;\n    let password1Value = {\n      password1\n    }.password1;\n    let password2Value = {\n      password2\n    }.password2;\n    let emailValue = {\n      email\n    }.email;\n\n    if (firstNameValue !== '' && lastNameValue !== '' && usernameValue !== '' && password1Value !== '' && password2Value !== '' && emailValue !== '' && emailError === false && usernameError === false && passwordError === false) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const firstName = e.target.firstName.value;\n    const lastName = e.target.lastName.value;\n    const password1 = e.target.password1.value;\n    const password2 = e.target.password2.value;\n    const username = e.target.username.value;\n    await props.onAuth(firstName, lastName, username, email, password1, password2);\n\n    if (store.getState().token === null) {\n      setErrResponse(Object.values(store.getState().response.data));\n    }\n\n    if (store.getState().token) {\n      let welcomeMsg = 'Welcome ' + username;\n      toast.success(welcomeMsg, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false\n      });\n      setTimeout(() => {\n        props.history.push('/dashboard/');\n      }, 5000);\n    }\n  }\n\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Sign up\"), props.error ? React.createElement(Typography, {\n    component: \"h1\",\n    color: \"error\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, errResponse) : null, React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"fname\",\n    name: \"firstName\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"firstName\",\n    label: \"First Name\",\n    autoFocus: true,\n    onChange: event => {\n      setFirstName(event.target.value);\n      validator();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"lastName\",\n    label: \"Last Name\",\n    name: \"lastName\",\n    autoComplete: \"lname\",\n    onChange: event => {\n      setLastName(event.target.value);\n      validator();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    error: emailError,\n    autoComplete: \"email\",\n    onChange: event => {\n      setEmail(event.target.value);\n      validateEmail(event.target.value);\n      validator();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }), {\n    emailError\n  }.emailError ? React.createElement(Typography, {\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"Enter a valid email\") : null), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    name: \"username\",\n    autoComplete: \"username\",\n    error: usernameError,\n    onChange: event => {\n      setUsername(event.target.value);\n      userNameValidator(event.target.value);\n      validator();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }), {\n    usernameError\n  }.usernameError ? React.createElement(Typography, {\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, \"Username can only contain 150 characters or fewer. Letters, digits and @/./+/-/_ only.\") : null), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password1\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password1\",\n    autoComplete: \"current-password\",\n    error: passwordError || passwordMatchError,\n    onChange: event => {\n      setPassword1(event.target.value);\n      passwordValidator(event.target.value);\n      validator();\n    },\n    onFocus: event => {\n      setActive(true);\n    },\n    onBlur: event => {\n      setActive(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }), {\n    active\n  }.active ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, \"Your password can't be too similar to your other personal information.\"), React.createElement(Typography, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, \"Your password must contain at least 8 characters.\"), React.createElement(Typography, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, \"Your password can't be a commonly used password.\"), React.createElement(Typography, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, \"Your password can't be entirely numeric.\")) : null), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password2\",\n    label: \"Confrim Password\",\n    type: \"password\",\n    id: \"password2\",\n    autoComplete: \"current-password\",\n    error: passwordMatchError,\n    onChange: event => {\n      setPassword2(event.target.value);\n      passwordMatch(event.target.value);\n      validator();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }), passwordMatchError ? React.createElement(Typography, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, \"Password do not match\") : null)), React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    disabled: validator(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, props.loading ? React.createElement(CircularProgress, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }) : 'Sign Up'), React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/login/\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  }, \"Already have an account? Sign in\"))))), React.createElement(Box, {\n    mt: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, React.createElement(Copyright, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error,\n    loading: state.loading,\n    token: state.token,\n    response: state.response\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (firstname, lastname, username, email, password1, password2) => dispatch(actions.authSignup(firstname, lastname, username, email, password1, password2))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/ashutosh/Desktop/pyve/myenv/react-notemaster-master/src/account/Signup.js"],"names":["React","useState","Fragment","Avatar","Button","CssBaseline","TextField","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","Container","connect","actions","store","ToastContainer","toast","CircularProgress","Copyright","Date","getFullYear","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","props","classes","firstName","setFirstName","lastName","setLastName","username","setUsername","password1","setPassword1","email","setEmail","password2","setPassword2","errResponse","setErrResponse","emailError","setEmailError","usernameError","setUsernameError","passwordError","setPasswordError","passwordMatchError","setPasswordMatchError","active","setActive","validateEmail","re","test","String","toLowerCase","userNameValidator","userNameChecker","trim","passwordValidator","password","passwordChecker","length","passwordMatch","password1Value","validator","firstNameValue","lastNameValue","usernameValue","password2Value","emailValue","handleSubmit","e","preventDefault","target","value","onAuth","getState","token","Object","values","response","data","welcomeMsg","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","setTimeout","history","push","error","event","loading","mapStateToProps","state","mapDispatchToProps","dispatch","firstname","lastname","authSignup"],"mappings":"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","sourcesContent":["import React, {useState, Fragment} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\nimport {store} from '../index';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"\">\n        Notemaster\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignUp(props) {\n  const classes = useStyles();\n\n  const [ firstName, setFirstName ] = useState('')\n  const [ lastName, setLastName ] = useState('')\n  const [ username, setUsername ] = useState('')\n\n  const [ password1, setPassword1 ] = useState('')\n  const [ email, setEmail ] = useState('')\n  const [ password2, setPassword2 ] = useState('')\n\n  const [errResponse, setErrResponse] = React.useState()\n\n  const [emailError, setEmailError] = useState(false)\n  const [usernameError, setUsernameError] = useState(false)\n  const [passwordError, setPasswordError] = useState(false)\n  const [passwordMatchError, setPasswordMatchError] = useState(false)\n\n  const [active, setActive] = useState(false)\n\n\n\n  \n\n  function validateEmail(email) {\n    // eslint-disable-next-line\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    \n    setEmailError(!re.test(String(email).toLowerCase()))\n   \n\n}\n\n  const userNameValidator = (username) =>{\n\n    \n    // eslint-disable-next-line\n    let re = /^([a-zA-Z0-9@/./+/-/_]+)$/\n    let userNameChecker = re.test(String(username).trim().toLowerCase())\n\n    if(userNameChecker || username.trim() > 150 ){\n      setUsernameError(false)\n  \n\n    }else{\n      setUsernameError(false)\n    }\n\n\n  }\n\n\n  const passwordValidator  = (password) => {\n    let re = /^([0-9]+)$/\n\n    let passwordChecker = re.test(password)\n\n \n    \n\n    if (passwordChecker || password.length < 8){\n      setPasswordError(true)\n     \n    }else{\n      setPasswordError(false)\n    }\n  }\n\n  const passwordMatch = (password2) => {\n\n    let password1Value = {password1}.password1\n    if(password1Value !== password2){\n      setPasswordMatchError(true)\n    }else{\n      setPasswordMatchError(false)\n    }\n\n  }\n\n  const validator= () => {\n\n    \n    let firstNameValue = {firstName}.firstName\n    let lastNameValue = {lastName}.lastName\n    let usernameValue = {username}.username\n    let password1Value = {password1}.password1\n    let password2Value = {password2}.password2\n    let emailValue = {email}.email\n\n\n\n\n    if (  (firstNameValue !== '' &&  lastNameValue !== '' && usernameValue !== '' && password1Value !== '' && password2Value !== '' &&  emailValue !== '') &&\n    \n    (emailError === false && usernameError === false && passwordError === false )\n    \n    ){\n      return false\n    }else{\n      return true\n    }\n\n  }\n\n\n  \n\n\n  async function handleSubmit(e){\n    e.preventDefault()\n    const email = e.target.email.value\n    const firstName = e.target.firstName.value\n    const lastName = e.target.lastName.value\n    const password1 = e.target.password1.value\n    const password2 = e.target.password2.value\n    const username = e.target.username.value\n    await props.onAuth(firstName, lastName, username, email, password1, password2)\n\n    if (store.getState().token === null) {\n\n      setErrResponse( Object.values(store.getState().response.data) )\n      \n    }\n\n    if (store.getState().token){\n\n      let welcomeMsg = 'Welcome '+ username \n      toast.success(welcomeMsg, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false\n        });\n\n\n        setTimeout(() => {\n          props.history.push('/dashboard/')\n        }, 5000);\n      \n      \n    }\n      \n\n  }\n\n\n\n\n\n  \n\n  return (\n    <Container component=\"main\"  maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        {\n          props.error ? \n        \n        <Typography component=\"h1\" color='error' variant=\"h5\">\n          {errResponse}\n        </Typography>\n\n          : null\n\n        }\n\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange = { event => {\n                  setFirstName(event.target.value)\n                  validator()\n                }}\n              />\n              \n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange = { event => {\n                  setLastName(event.target.value)\n                  validator()\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                error = {emailError}\n                autoComplete=\"email\"\n                onChange = {\n                  event => {\n                    setEmail(event.target.value)\n                    validateEmail(event.target.value)\n                    validator()\n\n                  }\n                }\n              />\n             \n              {\n                {emailError}.emailError ? <Typography color=\"error\">\n                Enter a valid email\n              </Typography> :\n              null\n              }\n              \n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                error = {usernameError}\n                onChange = {\n                  event => {\n                    setUsername(event.target.value)\n                    userNameValidator(event.target.value)\n                    validator()\n\n                  }\n                }\n              />\n\n              {\n                {usernameError}.usernameError ? <Typography color=\"error\">\n                Username can only contain 150 characters or fewer. Letters, digits and @/./+/-/_ only.\n              </Typography> :\n              null\n              }\n            </Grid>\n\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password1\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password1\"\n                autoComplete=\"current-password\"\n                error = {passwordError || passwordMatchError}\n                onChange = {\n                  event => {\n                    setPassword1(event.target.value)\n                    passwordValidator(event.target.value)\n    \n                    validator()\n\n                  }\n                \n                }\n                \n                \n                onFocus = {\n                  event => {\n                    setActive(true)\n                  }\n                }\n\n                onBlur= {\n                  event => {\n                    setActive(false)\n                  \n                  }\n                }\n              \n              />\n\n            {\n                {active}.active ? \n                <Fragment>\n                <Typography color=\"primary\">\n                  Your password can't be too similar to your other personal information.\n                </Typography>      \n\n                <Typography color=\"primary\">\n                Your password must contain at least 8 characters.\n                </Typography> \n\n                <Typography color=\"primary\">\n                  Your password can't be a commonly used password.\n                </Typography>       \n\n                <Typography color=\"primary\">\n                Your password can't be entirely numeric.\n                </Typography>  \n                </Fragment>      \n\n               :\n              null\n              }\n            </Grid>\n\n            \n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password2\"\n                label=\"Confrim Password\"\n                type=\"password\"\n                id=\"password2\"\n                autoComplete=\"current-password\"\n                error = {passwordMatchError}\n                onChange = {\n                  event => {\n                    setPassword2(event.target.value)\n                    passwordMatch(event.target.value)\n                    validator()\n\n                  }\n                }\n              />\n                {\n\n                  passwordMatchError ? \n\n                  <Typography color=\"secondary\">\n                    Password do not match\n                  </Typography>\n\n                  :\n                  null\n              \n                }\n            </Grid>\n\n          \n  \n          </Grid>\n          <ToastContainer />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled = {validator()}\n          >\n             {\n              props.loading ? <CircularProgress color=\"secondary\" /> : 'Sign Up'\n            }\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to= '/login/' variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    error : state.error,\n    loading : state.loading,\n    token: state.token, \n    response:state.response\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth : (firstname, lastname, username, email, password1, password2) => dispatch(actions.authSignup(firstname, lastname, username, email, password1, password2))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}