{"ast":null,"code":"var _jsxFileName = \"/home/ashutosh/Desktop/pyve/myenv/react-notemaster-master/src/components/dashboard.js\";\nimport React, { Fragment } from 'react';\nimport './Dashboard.css';\nimport SidebarComponent from '../sidebar/sidebar';\nimport EditorComponent from '../editor/editor';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport styles from './dashboardStyles';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport * as actions from '../store/actions/auth';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withRouter } from 'react-router-dom';\n\nclass DashboardComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.getNotesFromDb = () => {\n      axios.get('https://notemaster.herokuapp.com/api/notes/').then(res => this.setState({\n        notes: res.data\n      })).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.selectNote = (note, index) => this.setState({\n      selectedNoteIndex: index,\n      selectedNote: note\n    });\n\n    this.noteUpdate = (id, noteObj) => {\n      axios.put(`https://notemaster.herokuapp.com/api/notes/${id}/`, {\n        title: noteObj.title,\n        body: noteObj.body\n      });\n      this.getNotesFromDb();\n    };\n\n    this.newNote = async title => {\n      const note = {\n        title: title,\n        body: ''\n      };\n      const newFromDB = await axios.post(`https://notemaster.herokuapp.com/api/notes/`, {\n        title: note.title,\n        body: note.body\n      });\n      const newID = newFromDB.data.id;\n      await this.setState({\n        notes: [...this.state.notes, note]\n      });\n      const newNoteIndex = this.state.notes.indexOf(this.state.notes.filter(_note => _note.id === newID)[0]);\n      this.setState({\n        selectedNote: this.state.notes[newNoteIndex],\n        selectedNoteIndex: newNoteIndex\n      });\n      this.getNotesFromDb();\n    };\n\n    this.deleteNote = async note => {\n      const noteIndex = this.state.notes.indexOf(note);\n      await this.setState({\n        notes: this.state.notes.filter(_note => _note !== note)\n      });\n\n      if (this.state.selectedNoteIndex === noteIndex) {\n        this.setState({\n          selectedNoteIndex: null,\n          selectedNote: null\n        });\n      } else {\n        this.state.notes.length > 1 ? this.selectNote(this.state.notes[this.state.selectedNoteIndex - 1], this.state.selectedNoteIndex - 1) : this.setState({\n          selectedNoteIndex: null,\n          selectedNote: null\n        });\n      }\n\n      axios.delete(`https://notemaster.herokuapp.com/api/notes/${note.id}/`);\n    };\n\n    this.state = {\n      selectedNoteIndex: null,\n      selectedNote: null,\n      notes: null,\n      open: false,\n      user: null\n    };\n  }\n\n  static getDerivedStateFromProps(newProps, state) {\n    newProps.onTryAutoSignup(newProps.username || localStorage.getItem('user'));\n    const token = newProps.token || localStorage.getItem('token');\n\n    if (token) {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \" + token\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.onTryAutoSignup(this.props.username);\n    console.log(this.state.selectedNote);\n    this.setState({\n      user: localStorage.getItem('user') || this.props.username\n    });\n    const sessionTimeout = localStorage.getItem('token') && localStorage.getItem('expirationDate');\n\n    if (!sessionTimeout) {\n      this.props.history.push('/login/');\n    } else {\n      this.getNotesFromDb();\n    }\n  }\n\n  render() {\n    const token = localStorage.getItem('token');\n    const classes = this.props.classes;\n\n    const handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    const handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.props.token || token ? React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(AppBar, {\n      position: \"fixed\",\n      className: clsx(classes.appBar, {\n        [classes.appBarShift]: this.state.open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      onClick: handleDrawerOpen,\n      edge: \"start\",\n      className: clsx(classes.menuButton, this.state.open && classes.hide),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Notemaster\"), React.createElement(Tooltip, {\n      title: \"Log out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(ExitToAppIcon, {\n      className: \"log-out-icon\",\n      onClick: this.props.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })))), React.createElement(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: this.state.open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, classes.direction === 'ltr' ? React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }) : React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }))), React.createElement(SidebarComponent, {\n      selectedNoteIndex: this.state.selectedNoteIndex,\n      notes: this.state.notes,\n      deleteNote: this.deleteNote,\n      selectNote: this.selectNote,\n      newNote: this.newNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      className: clsx(classes.content, {\n        [classes.contentShift]: this.state.open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), this.state.selectedNote ? React.createElement(EditorComponent, {\n      selectedNote: this.state.selectedNote,\n      selectedNoteIndex: this.state.selectedNoteIndex,\n      notes: this.state.notes,\n      noteUpdate: this.noteUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"welcome_Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Welcome to Notemaster \", React.createElement(\"span\", {\n      className: \"capitalize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, this.state.user)), React.createElement(Typography, {\n      className: \"welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Notemaster is a web app used to store important notes. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), \"Just like Google Keep\"), React.createElement(Typography, {\n      className: \"welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Click on the Hamburger Icon on top left to continue\"))))) : this.props.history.push('/login/'));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token,\n    username: state.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(actions.logout()),\n  onTryAutoSignup: username => dispatch(actions.authCheckState(username))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DashboardComponent)));","map":{"version":3,"sources":["/home/ashutosh/Desktop/pyve/myenv/react-notemaster-master/src/components/dashboard.js"],"names":["React","Fragment","SidebarComponent","EditorComponent","connect","axios","clsx","Drawer","CssBaseline","AppBar","Toolbar","Typography","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","styles","withStyles","ExitToAppIcon","actions","Tooltip","withRouter","DashboardComponent","Component","constructor","getNotesFromDb","get","then","res","setState","notes","data","catch","err","console","log","selectNote","note","index","selectedNoteIndex","selectedNote","noteUpdate","id","noteObj","put","title","body","newNote","newFromDB","post","newID","state","newNoteIndex","indexOf","filter","_note","deleteNote","noteIndex","length","delete","open","user","getDerivedStateFromProps","newProps","onTryAutoSignup","username","localStorage","getItem","token","defaults","headers","Authorization","componentDidMount","props","sessionTimeout","history","push","render","classes","handleDrawerOpen","handleDrawerClose","root","appBar","appBarShift","menuButton","hide","logout","drawer","paper","drawerPaper","drawerHeader","direction","content","contentShift","mapStateToProps","mapDispatchToProps","dispatch","authCheckState"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport './Dashboard.css';\nimport SidebarComponent from '../sidebar/sidebar';\nimport EditorComponent from '../editor/editor';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport styles from './dashboardStyles';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport * as actions from '../store/actions/auth';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withRouter } from 'react-router-dom';\n\n\nclass DashboardComponent extends React.Component{\n\n  constructor(){\n    super()\n    this.state ={\n      selectedNoteIndex: null,\n      selectedNote: null,\n      notes: null,\n      open: false,\n      user : null\n    }\n  }\n\n  getNotesFromDb = () => {\n    axios.get('https://notemaster.herokuapp.com/api/notes/').then(\n      res =>  this.setState({\n        notes: res.data\n      })  \n    ).catch(err => {\n      console.log(err);\n      \n    })\n  }\n\n  static getDerivedStateFromProps(newProps, state) {\n    newProps.onTryAutoSignup(newProps.username || localStorage.getItem('user'));\n    const token = newProps.token ||localStorage.getItem('token');\n    \n\n  \n\n    if (token) {\n      axios.defaults.headers ={\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \" + token\n      } \n      \n    }\n\n\n    \n    return null;\n  \n  }\n\n\n  componentDidMount(){\n    this.props.onTryAutoSignup(this.props.username);\n    console.log(this.state.selectedNote);\n    \n    this.setState({\n      user : localStorage.getItem('user') || this.props.username\n    })\n    const sessionTimeout =  localStorage.getItem('token') && localStorage.getItem('expirationDate');\n\n    if(!sessionTimeout){\n      this.props.history.push('/login/')\n  \n    }else{\n      this.getNotesFromDb()\n\n    }\n\n\n  \n  }\n\n  selectNote = (note, index) => this.setState({\n    selectedNoteIndex: index,\n    selectedNote: note\n})\n\n\nnoteUpdate = (id, noteObj) =>{\n\n  axios.put(`https://notemaster.herokuapp.com/api/notes/${id}/`, {\n    title: noteObj.title,\n    body:noteObj.body\n  });\n\n  this.getNotesFromDb();\n  \n}\n\nnewNote = async(title) => {\n  const note = {\n    title: title,\n    body: ''\n  }\n\n  const newFromDB = await axios.post(`https://notemaster.herokuapp.com/api/notes/`, {\n    title: note.title,\n    body: note.body\n  });\n  const newID= newFromDB.data.id;\n\n\n  await this.setState({\n    notes: [...this.state.notes, note]\n  })\n\n  const newNoteIndex = this.state.notes.indexOf(this.state.notes.filter(_note => _note.id === newID)[0])\n  this.setState({\n    selectedNote: this.state.notes[newNoteIndex], selectedNoteIndex: newNoteIndex\n  })\n\n  this.getNotesFromDb()\n\n\n}\n\ndeleteNote = async (note) => {\n  const noteIndex = this.state.notes.indexOf(note);\n  await this.setState({\n    notes: this.state.notes.filter(_note => _note !== note)\n  })\n  if(this.state.selectedNoteIndex === noteIndex){\n    this.setState({\n      selectedNoteIndex: null,\n      selectedNote: null\n    })\n  }else {\n    this.state.notes.length > 1 ?\n    this.selectNote(this.state.notes[this.state.selectedNoteIndex - 1], this.state.selectedNoteIndex -1)\n    : this.setState({\n      selectedNoteIndex: null,\n      selectedNote: null\n    })\n  }\n\n  axios.delete(`https://notemaster.herokuapp.com/api/notes/${note.id}/`)\n}\n\n  \n\n  render() {\n\n    const token = localStorage.getItem('token');\n    const {classes} = this.props\n\n    const handleDrawerOpen = () => {\n        this.setState({\n          open: true});\n      };\n\n      const handleDrawerClose = () => {\n        this.setState({\n          open: false});\n      \n      };\n\n\n\n    return(\n\n      <Fragment>\n     {\n\n      this.props.token || token ?\n\n      <div className={classes.root}>\n     \n      <CssBaseline />\n      \n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: this.state.open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, this.state.open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Notemaster \n          </Typography>\n\n          <Tooltip title=\"Log out\">\n            <ExitToAppIcon className='log-out-icon' onClick={this.props.logout}/>\n         </Tooltip>\n         \n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={this.state.open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {classes.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n      \n      \n        <SidebarComponent \n        selectedNoteIndex={this.state.selectedNoteIndex} \n        notes={this.state.notes}\n        deleteNote={this.deleteNote}\n        selectNote={this.selectNote}\n        newNote={this.newNote} />\n        </Drawer>\n        \n\n        <main\n           className={clsx(classes.content, {\n             [classes.contentShift]: this.state.open,\n           })}\n         >\n           <div className={classes.drawerHeader} />\n         {\n           this.state.selectedNote ?\n\n           <EditorComponent selectedNote={this.state.selectedNote}\n            selectedNoteIndex={this.state.selectedNoteIndex} \n            notes={this.state.notes}\n            noteUpdate={this.noteUpdate}/>\n            :\n            <Fragment>\n            <div className={classes.paper}>\n              <Typography className='welcome_Header' >\n                Welcome to Notemaster <span className='capitalize'>{this.state.user}</span>\n                \n              </Typography>\n\n              <Typography className='welcome'>\n                Notemaster is a web app used to store important notes. <br/>\n                Just like Google Keep\n              </Typography>\n\n              <Typography className='welcome'>\n              Click on the Hamburger Icon on top left to continue\n              </Typography>\n\n          </div>\n          </Fragment>\n         }\n\n</main> \n        </div>\n      :\n      this.props.history.push('/login/')\n\n\n      }\n      </Fragment>\n    \n    )\n  } \n\n}\n\n\nconst mapStateToProps = state => {\n\n  return {\n    token: state.token,\n    username: state.username\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    logout: () => dispatch(actions.logout()),\n    onTryAutoSignup : (username) => dispatch(actions.authCheckState(username))\n  \n})\n\n\n\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DashboardComponent)));\n"]},"metadata":{},"sourceType":"module"}