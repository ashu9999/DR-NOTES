{"ast":null,"code":"var _jsxFileName = \"/home/ashutosh/Desktop/pyve/myenv/react-notemaster-master/src/sidebar/sidebar.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebarItem/sidebarItem';\nimport './Sidebar.css';\n\nclass SidebarComponent extends Component {\n  constructor() {\n    super();\n\n    this.newNoteBtnClick = () => {\n      console.log('New Note ');\n      this.setState({\n        title: null,\n        addingNote: !this.state.addingNote\n      });\n    };\n\n    this.updateTitle = txt => {\n      this.setState({\n        title: txt\n      });\n    };\n\n    this.newNote = () => {\n      this.props.newNote(this.state.title);\n      this.setState({\n        title: null,\n        addingNote: false\n      });\n    };\n\n    this.selectNote = (note, index) => {\n      this.props.selectNote(note, index);\n    };\n\n    this.deleteNote = notes => {\n      this.props.deleteNote(notes);\n    };\n\n    this.state = {\n      addingNote: false,\n      title: null\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          notes = _this$props.notes,\n          classes = _this$props.classes,\n          selectedNoteIndex = _this$props.selectedNoteIndex;\n\n    if (notes) {\n      return React.createElement(\"div\", {\n        className: `${classes.sidebarContainer} ${'test'}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.newNoteBtnClick,\n        className: classes.newNoteBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.addingNote ? 'Cancel' : 'New Note'), this.state.addingNote ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: classes.newNoteInput,\n        placeholder: \"Enter Note title\",\n        onKeyUp: e => this.updateTitle(e.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: classes.newNoteSubmitBtn,\n        onClick: this.newNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Submit Note\")) : null, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, notes.map((_note, _index) => {\n        return React.createElement(\"div\", {\n          key: _index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(SidebarItemComponent, {\n          _note: _note,\n          _index: _index,\n          selectedNoteIndex: selectedNoteIndex,\n          selectNote: this.selectNote,\n          deleteNote: this.deleteNote,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }));\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Add a note!\");\n    }\n  }\n\n}\n\nexport default withStyles(styles)(SidebarComponent);","map":{"version":3,"sources":["/home/ashutosh/Desktop/pyve/myenv/react-notemaster-master/src/sidebar/sidebar.js"],"names":["React","Component","withStyles","styles","List","Divider","Button","SidebarItemComponent","SidebarComponent","constructor","newNoteBtnClick","console","log","setState","title","addingNote","state","updateTitle","txt","newNote","props","selectNote","note","index","deleteNote","notes","render","classes","selectedNoteIndex","sidebarContainer","newNoteBtn","newNoteInput","e","target","value","newNoteSubmitBtn","map","_note","_index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;AACA,OAAQC,oBAAR,MAAmC,4BAAnC;AACA,OAAO,eAAP;;AAEA,MAAMC,gBAAN,SAA+BP,SAA/B,CAAyC;AACrCQ,EAAAA,WAAW,GAAE;AACT;;AADS,SAQbC,eARa,GAQK,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,IADG;AAEVC,QAAAA,UAAU,EAAG,CAAC,KAAKC,KAAL,CAAWD;AAFf,OAAd;AAKH,KAfY;;AAAA,SAiBbE,WAjBa,GAiBEC,GAAD,IAAQ;AAClB,WAAKL,QAAL,CAAc;AACVC,QAAAA,KAAK,EAACI;AADI,OAAd;AAIH,KAtBY;;AAAA,SAwBbC,OAxBa,GAwBH,MAAM;AAEZ,WAAKC,KAAL,CAAWD,OAAX,CAAmB,KAAKH,KAAL,CAAWF,KAA9B;AACA,WAAKD,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,IADG;AAEVC,QAAAA,UAAU,EAAE;AAFF,OAAd;AAKH,KAhCY;;AAAA,SAkCbM,UAlCa,GAkCA,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,WAAKH,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,EAA4BC,KAA5B;AACH,KApCY;;AAAA,SAsCbC,UAtCa,GAsCCC,KAAD,IAAW;AACpB,WAAKL,KAAL,CAAWI,UAAX,CAAsBC,KAAtB;AAEH,KAzCY;;AAGT,SAAKT,KAAL,GAAa;AACTD,MAAAA,UAAU,EAAE,KADH;AAETD,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAmCDY,EAAAA,MAAM,GAAG;AAAA,wBACyC,KAAKN,KAD9C;AAAA,UACGK,KADH,eACGA,KADH;AAAA,UACUE,OADV,eACUA,OADV;AAAA,UACmBC,iBADnB,eACmBA,iBADnB;;AAEL,QAAIH,KAAJ,EAAW;AAEP,aACI;AAAK,QAAA,SAAS,EAAG,GAAEE,OAAO,CAACE,gBAAiB,IAAG,MAAO,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACA,QAAA,OAAO,EAAE,KAAKnB,eADd;AAEA,QAAA,SAAS,EAAEiB,OAAO,CAACG,UAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIO,KAAKd,KAAL,CAAWD,UAAX,GAAwB,QAAxB,GAAmC,UAJ1C,CADJ,EAUQ,KAAKC,KAAL,CAAWD,UAAX,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,SAAS,EAAEY,OAAO,CAACI,YAFnB;AAGA,QAAA,WAAW,EAAC,kBAHZ;AAIA,QAAA,OAAO,EAAGC,CAAD,IAAO,KAAKf,WAAL,CAAiBe,CAAC,CAACC,MAAF,CAASC,KAA1B,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAEP,OAAO,CAACQ,gBADvB;AAEI,QAAA,OAAO,EAAE,KAAKhB,OAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARJ,CADA,GAYS,IAtBjB,EAyBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKM,KAAK,CAACW,GAAN,CAAU,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzB,eACI;AAAK,UAAA,GAAG,EAAEA,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,oBAAD;AACG,UAAA,KAAK,EAAED,KADV;AAEG,UAAA,MAAM,EAAEC,MAFX;AAGG,UAAA,iBAAiB,EAAEV,iBAHtB;AAIG,UAAA,UAAU,EAAI,KAAKP,UAJtB;AAKG,UAAA,UAAU,EAAI,KAAKG,UALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EASI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CADJ;AAaH,OAdD,CAFL,CAzBJ,CADJ;AAgDH,KAlDD,MAkDK;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ;AAGH;AAEJ;;AArGoC;;AAyGzC,eAAetB,UAAU,CAACC,MAAD,CAAV,CAAmBK,gBAAnB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport  SidebarItemComponent  from '../sidebarItem/sidebarItem';\nimport './Sidebar.css';\n\nclass SidebarComponent extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n            addingNote: false,\n            title: null\n        };\n    }\n    newNoteBtnClick = () => {\n        console.log('New Note ');\n        this.setState({\n            title: null,\n            addingNote : !this.state.addingNote\n        })\n        \n    }   \n\n    updateTitle = (txt) =>{\n        this.setState({\n            title:txt\n        })\n        \n    }\n\n    newNote = () => {\n      \n        this.props.newNote(this.state.title);\n        this.setState({\n            title: null,\n            addingNote: false\n        })\n        \n    }\n\n    selectNote = (note, index) => {\n        this.props.selectNote(note, index)        \n    }\n\n    deleteNote = (notes) => {\n        this.props.deleteNote(notes)\n        \n    }\n    render() {\n        const { notes, classes, selectedNoteIndex } = this.props;\n        if (notes) {\n\n            return (\n                <div className={`${classes.sidebarContainer} ${'test'}`} >\n                    <Button\n                    onClick={this.newNoteBtnClick}\n                    className={classes.newNoteBtn}>\n                       {\n                           this.state.addingNote ? 'Cancel' : 'New Note'\n                       } \n                    </Button>\n    \n                    {\n                        this.state.addingNote ? \n                        <div>\n                            <input \n                            type='text'\n                            className={classes.newNoteInput}\n                            placeholder='Enter Note title'\n                            onKeyUp={(e) => this.updateTitle(e.target.value)}>\n                \n                            </input>\n                            <Button \n                                className={classes.newNoteSubmitBtn}\n                                onClick={this.newNote}>Submit Note</Button>\n                        </div> : null\n                    }\n    \n                    <List>\n                        {\n                         notes.map((_note, _index) => {\n                             return(\n                                 <div key={_index}>\n                                     <SidebarItemComponent \n                                        _note={_note}\n                                        _index={_index}\n                                        selectedNoteIndex={selectedNoteIndex}\n                                        selectNote = {this.selectNote}\n                                        deleteNote = {this.deleteNote}\n                                        >\n                                     </SidebarItemComponent>\n                                     <Divider></Divider>\n                                 </div>\n                             )\n                         })   \n                        }\n                    </List>\n                </div>\n            )\n            \n        }else{\n            return(\n                <div>Add a note!</div>\n            )\n        }\n       \n    }\n}\n\n\nexport default withStyles(styles)(SidebarComponent)"]},"metadata":{},"sourceType":"module"}